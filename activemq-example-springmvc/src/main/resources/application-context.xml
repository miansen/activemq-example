<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 读取配置文件 -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>

	<!-- 连接工厂 -->
	<bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${jms.broker.url}"/>
		<property name="userName" value="${jms.broker.userName}"></property>  
        <property name="password" value="${jms.broker.password}"></property>  
        <property name="useAsyncSend" value="${jms.broker.useAsyncSend}" />  
	</bean>
	
	<!-- 连接池 -->
	<!-- ActiveMQ 为我们提供了一个 PooledConnectionFactory，通过往里面注入一个 ActiveMQConnectionFactory   
        可以用来将 Connection、Session 和  MessageProducer 池化，这样可以大大的减少我们的资源消耗，要依赖于 activemq-pool 包 -->  
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <!--真正可以产生连接的连接工厂，由对应的 JMS 服务厂商提供-->
        <property name="connectionFactory" ref="activeMQConnectionFactory" />
        <!--连接池的最大连接数-->
        <property name="maxConnections" value="${jms.pool.maxConnections}"/>
   	</bean>
	
	<!-- Spring 用于管理真正的 ConnectionFactory 的 ConnectionFactory -->
	<!-- 队列和非持久化订阅使用 -->
	<bean id="singleConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标 ConnectionFactory，对应真实的可以产生 JMS Connection 的 ConnectionFactory -->  
        <property name="targetConnectionFactory" ref="pooledConnectionFactory"/>
	</bean>
	
	<!-- Spring 用于管理真正的 ConnectionFactory 的 ConnectionFactory -->
	<!-- 持久化订阅使用 -->
	<bean id="subscriptionDurableSingleConnectionFactory2" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标 ConnectionFactory，对应真实的可以产生 JMS Connection 的 ConnectionFactory -->  
        <property name="targetConnectionFactory" ref="pooledConnectionFactory"/>
         <!--持久订阅ID -->  
        <property name="clientId" value="springmvc-activemq-topic-clientId-2" />
	</bean>
	
	<!-- Spring 用于管理真正的 ConnectionFactory 的 ConnectionFactory -->
	<!-- 持久化订阅使用 -->
	<bean id="subscriptionDurableSingleConnectionFactory3" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标 ConnectionFactory，对应真实的可以产生 JMS Connection 的 ConnectionFactory -->  
        <property name="targetConnectionFactory" ref="pooledConnectionFactory"/>
         <!--持久订阅ID -->  
        <property name="clientId" value="springmvc-activemq-topic-clientId-3" />
	</bean>
	
	<!--队列1-->
	<bean id="activeMQQueue1" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 队列的名称 -->
		<constructor-arg index="0" value="springmvc-activemq-queue-1" />
	</bean>
	
	<!--队列2-->
	<bean id="activeMQQueue2" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 队列的名称 -->
		<constructor-arg index="0" value="springmvc-activemq-queue-2" />
	</bean>
	
	<!--主题1-->
	<bean id="activeMQTopic1" class="org.apache.activemq.command.ActiveMQTopic">
        <!-- 主题的名称 -->
        <constructor-arg index="0" value="springmvc-activemq-topic-1"/>
    </bean>
    
    <!--主题2-->
	<bean id="activeMQTopic2" class="org.apache.activemq.command.ActiveMQTopic">
        <!-- 主题的名称 -->
        <constructor-arg index="0" value="springmvc-activemq-topic-2"/>
    </bean>
    
    <!-- 队列 JMS 模板，Spring 提供的 JMS 工具类，用它发送、接收消息。 -->
    <bean id="jmsTemplateQueue" class="org.springframework.jms.core.JmsTemplate">
    	<!-- 连接池 -->
        <property name="connectionFactory" ref="singleConnectionFactory"/>
        <!-- 默认的目的地，如果发送时不指定目的地，那么就用这个默认的目的地 -->
        <property name="defaultDestination" ref="activeMQQueue1"/>
        <!-- 消息转换器 -->
        <property name="messageConverter" ref="simpleMessageConverter" />
        <!-- 发送模式，1: 非持久化，2: 持久化 -->
        <property name="deliveryMode" value="2" />
        <!-- 是否为发布订阅模式，队列是 false，主题是 true --> 
        <property name="pubSubDomain" value="false"/>
    </bean>
    
    <!-- 主题 JMS 模板，Spring 提供的 JMS 工具类，用它发送、接收消息。 -->
    <bean id="jmsTemplateTopic" class="org.springframework.jms.core.JmsTemplate">
    	<!-- 连接池 -->
        <property name="connectionFactory" ref="singleConnectionFactory"/>
        <!-- 默认的目的地，如果发送时不指定目的地，那么就用这个默认的目的地 -->
        <property name="defaultDestination" ref="activeMQTopic1"/>
         <!-- 消息转换器 -->
        <property name="messageConverter" ref="simpleMessageConverter" />
        <!-- 发送模式，1: 非持久化，2: 持久化 -->
        <property name="deliveryMode" value="2" />
        <!-- 是否为发布订阅模式，队列是 false，主题是 true --> 
        <property name="pubSubDomain" value="true"/>
    </bean>
    
    <!--队列监听容器1，一经注册，自动监听-->
    <bean id="queueListenerContainer1" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<!-- 连接池 -->
		<property name="connectionFactory" ref="singleConnectionFactory" />
		<!-- 是否为发布订阅模式，队列是 false，主题是 true --> 
		<property name="pubSubDomain" value="false" />
		<!-- 监听目的地 -->
		<property name="destination" ref="activeMQQueue1" />
		<!-- 监听类 -->
		<property name="messageListener" ref="queueConsumer1" />
	</bean>
	
	<!--队列监听容器2，一经注册，自动监听-->
    <bean id="queueListenerContainer2" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<!-- 连接池 -->
		<property name="connectionFactory" ref="singleConnectionFactory" />
		<!-- 是否为发布订阅模式，队列是 false，主题是 true --> 
		<property name="pubSubDomain" value="false" />
		<!-- 监听目的地 -->
		<property name="destination" ref="activeMQQueue2" />
		<!-- 监听类 -->
		<property name="messageListener" ref="queueConsumer2" />
	</bean>
	
	<!--队列监听容器3，注意目的地跟容器2一样-->
    <bean id="queueListenerContainer3" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<!-- 连接池 -->
		<property name="connectionFactory" ref="singleConnectionFactory" />
		<!-- 是否为发布订阅模式，队列是 false，主题是 true --> 
		<property name="pubSubDomain" value="false" />
		<!-- 监听目的地 -->
		<property name="destination" ref="activeMQQueue2" />
		<!-- 监听类 -->
		<property name="messageListener" ref="queueConsumer3" />
	</bean>
	
	<!--主题监听容器1（非持久化订阅），一经注册，自动监听-->
    <bean id="topicListenerContainer1" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<!-- 连接池 -->
		<property name="connectionFactory" ref="singleConnectionFactory" />
		<!-- 监听目的地 -->
		<property name="destination" ref="activeMQTopic1" />
		<!-- 持久化订阅 -->
		<property name="subscriptionDurable" value="false" />
		<!-- 是否为发布订阅模式，队列是 false，主题是 true --> 
		<property name="pubSubDomain" value="true" />
		<!-- 监听类 -->
		<property name="messageListener" ref="topicConsumer1" />
	</bean>
	
	<!--主题监听容器2（持久化订阅），一经注册，自动监听-->
    <bean id="topicListenerContainer2" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<!-- 连接池 -->
		<property name="connectionFactory" ref="subscriptionDurableSingleConnectionFactory2" />
		<!-- 监听目的地 -->
		<property name="destination" ref="activeMQTopic2" />
		<!-- 持久化订阅 -->
		<property name="subscriptionDurable" value="true" />
		<!-- 设置接收客户端的 ID，配置持久订阅必须指定一个 clientId -->
		<property name="clientId" value="springmvc-activemq-topic-clientId-2" />
		<!-- 是否为发布订阅模式，队列是 false，主题是 true --> 
		<property name="pubSubDomain" value="true" />
		<!-- 监听类 -->
		<property name="messageListener" ref="topicConsumer2" />
	</bean>
	
	<!-- 主题监听容器3（持久化订阅），注意目的地跟容器2一样 -->
    <bean id="topicListenerContainer3" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<!-- 连接池 -->
		<property name="connectionFactory" ref="subscriptionDurableSingleConnectionFactory3" />
		<!-- 监听目的地 -->
		<property name="destination" ref="activeMQTopic2" />
		<!-- 持久化订阅 -->
		<property name="subscriptionDurable" value="true" />
		<!-- 设置接收客户端的 ID，配置持久订阅必须指定一个 clientId -->
		<property name="clientId" value="springmvc-activemq-topic-clientId-3" />
		<!-- 是否为发布订阅模式，队列是 false，主题是 true --> 
		<property name="pubSubDomain" value="true" />
		<!-- 监听类 -->
		<property name="messageListener" ref="topicConsumer3" />
	</bean>
	
    <!-- 队列生产者 -->
    <bean id="queueProducer" class="com.example.activemq.QueueProducer">
        <property name="jmsTemplate" ref="jmsTemplateQueue" />
    </bean>
    
    <!-- 主题生产者 -->
    <bean id="topicProducer" class="com.example.activemq.TopicProducer">
        <property name="jmsTemplate" ref="jmsTemplateTopic" />
    </bean>
    
    <!-- 队列消费者1 -->
    <bean id="queueConsumer1" class="com.example.activemq.QueueConsumer1" />
    <!-- 队列消费者2 -->
    <bean id="queueConsumer2" class="com.example.activemq.QueueConsumer2" />
    <!-- 队列消费者3 -->
    <bean id="queueConsumer3" class="com.example.activemq.QueueConsumer3" />
    
    <!-- 主题消费者1 -->
    <bean id="topicConsumer1" class="com.example.activemq.TopicConsumer1" />
    <!-- 主题消费者2 -->
    <bean id="topicConsumer2" class="com.example.activemq.TopicConsumer2" />
    <!-- 主题消费者3 -->
    <bean id="topicConsumer3" class="com.example.activemq.TopicConsumer3" />
    
    <!-- 消息转换器 -->
    <bean id="simpleMessageConverter" class="org.springframework.jms.support.converter.SimpleMessageConverter" />
</beans>